version: "3.5"
services:
  db:
    image: postgres:15-alpine
    hostname: db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "1GB"
    volumes:
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgresdb:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  api1:
    build: .
    restart: always
    hostname: api1
    environment:
      DB_CONNECTION_STRING: "postgresql://postgres:postgres@db:5432/rinha"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"
    ports:
      - 8001:80
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

  api2:
    build: .
    restart: always
    hostname: api2
    environment:
      DB_CONNECTION_STRING: "postgresql://postgres:postgres@db:5432/rinha"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"
    ports:
      - 8002:80
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

  nginx:
    image: nginx:1.25.1-alpine
    hostname: api
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

name: "rinha-de-backend"

networks:
  default:
    driver: bridge

volumes:
  postgresdb: